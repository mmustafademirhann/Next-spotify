CREATE TABLE public.album (
	album_id bigserial NOT NULL,
	title varchar(255) NOT NULL,
	artist_id int8 NOT NULL,
	album_d int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	tite varchar(255) NULL,
	image_url varchar(255) NULL,
	CONSTRAINT album_pkey PRIMARY KEY (album_id),
	CONSTRAINT album_artist_id_fkey FOREIGN KEY (artist_id) REFERENCES public.artist(artist_id)
);
CREATE INDEX album_artist_id_idx ON public.album USING btree (artist_id);

CREATE TABLE public.artist (
	artist_id bigserial NOT NULL,
	"name" varchar(255) NULL,
	image_url varchar(255) NULL,
	CONSTRAINT artist_pkey PRIMARY KEY (artist_id)
);


CREATE TABLE public.customer (
	customer_id bigserial NOT NULL,
	first_name varchar(255) NOT NULL,
	last_name varchar(255) NOT NULL,
	company varchar(255) NULL,
	address varchar(255) NULL,
	city varchar(255) NULL,
	state varchar(255) NULL,
	country varchar(255) NULL,
	postal_code varchar(255) NULL,
	phone varchar(255) NULL,
	fax varchar(255) NULL,
	email varchar(255) NOT NULL,
	support_rep_id int8 NULL,
	CONSTRAINT customer_pkey PRIMARY KEY (customer_id),
	CONSTRAINT customer_support_rep_id_fkey FOREIGN KEY (support_rep_id) REFERENCES public.employee(employee_id)
);
CREATE INDEX customer_support_rep_id_idx ON public.customer USING btree (support_rep_id);


CREATE TABLE public.employee (
	employee_id int8 NOT NULL,
	last_name varchar(255) NOT NULL,
	first_name varchar(255) NOT NULL,
	title varchar(255) NULL,
	reports_to int8 NULL,
	birth_date date NULL,
	hire_date date NULL,
	address varchar(255) NULL,
	city varchar(255) NULL,
	state varchar(255) NULL,
	country varchar(255) NULL,
	postal_code varchar(255) NULL,
	phone varchar(255) NULL,
	fax varchar(255) NULL,
	email varchar(255) NULL,
	CONSTRAINT employee_pkey PRIMARY KEY (employee_id),
	CONSTRAINT employee_reports_to_fkey FOREIGN KEY (reports_to) REFERENCES public.employee(employee_id)
);
CREATE INDEX employee_reports_to_idx ON public.employee USING btree (reports_to);

CREATE TABLE public.genre (
	genre_id int8 NOT NULL,
	"name" varchar(255) NULL,
	CONSTRAINT genre_pkey PRIMARY KEY (genre_id)
);

CREATE TABLE public.invoice (
	invoice_id int8 NOT NULL,
	customer_id int8 NOT NULL,
	invoice_date timestamp NOT NULL,
	billing_address varchar(255) NULL,
	billing_city varchar(255) NULL,
	billing_state varchar(255) NULL,
	billing_country varchar(255) NULL,
	billing_postal_code varchar(255) NULL,
	total float8 NOT NULL,
	CONSTRAINT invoice_pkey PRIMARY KEY (invoice_id),
	CONSTRAINT invoice_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id)
);
CREATE INDEX invoice_customer_id_idx ON public.invoice USING btree (customer_id);



CREATE TABLE public.invoice_line (
	invoice_line_id int8 NOT NULL,
	invoice_id int8 NOT NULL,
	track_id int8 NOT NULL,
	unit_price float8 NOT NULL,
	quantity int4 NOT NULL,
	CONSTRAINT invoice_line_pkey PRIMARY KEY (invoice_line_id),
	CONSTRAINT invoice_line_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoice(invoice_id),
	CONSTRAINT invoice_line_track_id_fkey FOREIGN KEY (track_id) REFERENCES public.track(track_id)
);
CREATE INDEX invoice_line_invoice_id_idx ON public.invoice_line USING btree (invoice_id);
CREATE INDEX invoice_line_track_id_idx ON public.invoice_line USING btree (track_id);

CREATE TABLE public.media_type (
	media_type_id int8 NOT NULL,
	"name" varchar(255) NULL,
	m int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	CONSTRAINT media_type_pkey PRIMARY KEY (media_type_id)
);

CREATE TABLE public.playlist (
	playlist_id int8 NOT NULL,
	"name" varchar(255) NULL,
	image_url varchar(255) NULL,
	CONSTRAINT playlist_pkey PRIMARY KEY (playlist_id)
);

CREATE TABLE public.playlist_track (
	playlist_id int8 NOT NULL,
	track_id int8 NOT NULL,
	playlist_track_id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	CONSTRAINT playlist_track_pkey PRIMARY KEY (playlist_id, track_id),
	CONSTRAINT playlist_track_playlist_id_fkey FOREIGN KEY (playlist_id) REFERENCES public.playlist(playlist_id),
	CONSTRAINT playlist_track_track_id_fkey FOREIGN KEY (track_id) REFERENCES public.track(track_id)
);
CREATE INDEX playlist_track_playlist_id_idx ON public.playlist_track USING btree (playlist_id);
CREATE INDEX playlist_track_track_id_idx ON public.playlist_track USING btree (track_id);


CREATE TABLE public.track (
	track_id int8 NOT NULL,
	"name" varchar(255) NOT NULL,
	album_id int8 NULL,
	media_type_id int8 NOT NULL,
	genre_id int8 NULL,
	composer varchar(255) NULL,
	milliseconds int4 NOT NULL,
	bytes int4 NULL,
	unit_price float8 NOT NULL,
	CONSTRAINT track_pkey PRIMARY KEY (track_id),
	CONSTRAINT track_album_id_fkey FOREIGN KEY (album_id) REFERENCES public.album(album_id),
	CONSTRAINT track_genre_id_fkey FOREIGN KEY (genre_id) REFERENCES public.genre(genre_id),
	CONSTRAINT track_media_type_id_fkey FOREIGN KEY (media_type_id) REFERENCES public.media_type(media_type_id)
);
CREATE INDEX track_album_id_idx ON public.track USING btree (album_id);
CREATE INDEX track_genre_id_idx ON public.track USING btree (genre_id);
CREATE INDEX track_media_type_id_idx ON public.track USING btree (media_type_id);

CREATE TABLE public.user_library_albums (
	user_id int8 NOT NULL,
	album_id int8 NOT NULL,
	CONSTRAINT user_library_albums_pkey PRIMARY KEY (user_id, album_id),
	CONSTRAINT fkbpdprqttabg1fuilnq41axtv3 FOREIGN KEY (user_id) REFERENCES public.users(id),
	CONSTRAINT fkk0g1vf06qm4phjt0c9c3xs36k FOREIGN KEY (album_id) REFERENCES public.album(album_id)
);
CREATE TABLE public.user_library_playlists (
	user_id int8 NOT NULL,
	playlist_id int8 NOT NULL,
	CONSTRAINT user_library_playlists_pkey PRIMARY KEY (user_id, playlist_id),
	CONSTRAINT fk6nny0uct8whii6xmnq1hnn7wt FOREIGN KEY (playlist_id) REFERENCES public.playlist(playlist_id),
	CONSTRAINT fkv0gfq8sescjtnj7ntump4i71 FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_liked_tracks (
	user_id int8 NOT NULL,
	track_id int8 NOT NULL,
	CONSTRAINT user_liked_tracks_pkey PRIMARY KEY (user_id, track_id),
	CONSTRAINT fk8gmt5ld8vi650birj1k1bbl6b FOREIGN KEY (user_id) REFERENCES public.users(id),
	CONSTRAINT fkn6xvw6keldr8r7v590fkaeuh3 FOREIGN KEY (track_id) REFERENCES public.track(track_id)
);

CREATE TABLE public.users (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"password" varchar(255) NOT NULL,
	"role" varchar(255) NOT NULL,
	username varchar(255) NOT NULL,
	CONSTRAINT ukr43af9ap4edm43mmtq01oddj6 UNIQUE (username),
	CONSTRAINT users_pkey PRIMARY KEY (id)
);